{"version":3,"sources":["Components/Movielist.jsx","Components/Navbar.jsx","Components/Searchbar.jsx","Components/Title.jsx","Components/Description.jsx","App.js","serviceWorker.js","index.js"],"names":["withRouter","props","useState","show","setshow","handleClose","title","settitle","description","setdescription","src","setsrc","Movies","filter","el","toUpperCase","includes","keyword","map","className","source","alt","style","cursor","onClick","history","push","textAlign","paddingBottom","Button","variant","Modal","onHide","Header","closeButton","Title","type","placeholder","onChange","e","target","value","Body","size","Footer","Addmovie","Navbar","bg","Brand","width","height","Searchbar","Search","Description","match","params","bande_annonce","frameborder","allow","allowfullscreen","App","rating","setMovies","setkeyword","x","path","component","exact","Boolean","window","location","hostname","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.a5d46913.chunk.js","sourcesContent":["import React, { useState } from 'react'\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport { Button , Modal} from 'react-bootstrap';\r\nimport {Link} from 'react-router-dom'\r\nimport {withRouter} from \"react-router-dom\"\r\nconst Movielist = (props) => {\r\n    const [show , setshow]=useState(false)\r\n    const handleClose =()=>setshow(false)\r\n    const handleShow =()=>setshow(true)\r\n    const [title,settitle]=useState('')\r\n    const [description,setdescription]=useState('')\r\n    const [src,setsrc]=useState('')\r\n\r\n    // const [rating,setRating]=useState(0)\r\n    return ( <div>\r\n      \r\n        {props.Movies.filter(el=>el.title.toUpperCase().includes(props.keyword.toUpperCase())).map(el=>\r\n            <div className=\"movielist-container\">\r\n                <img className=\"image-movie\" src={el.source} alt=\"\"/>\r\n                <h1 style={{cursor:\"pointer\"}} onClick={()=>props.history.push(\"/description/\"+el.title)}>{el.title}</h1>\r\n                <h3>{el.description}</h3>\r\n            </div>\r\n            )}\r\n       \r\n        \r\n            <div style={{textAlign:\"center\",paddingBottom:40}}>\r\n      <Button variant=\"primary\" onClick={handleShow}>\r\n        Add Movies\r\n      </Button>\r\n\r\n      <Modal show={show} onHide={handleClose}>\r\n        <Modal.Header closeButton>\r\n          <Modal.Title><input type=\"text\" placeholder=\"title\" onChange={(e)=>settitle(e.target.value)} /></Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n            <input type=\"text\"placeholder=\"description\" size=\"40\" onChange={(e)=>setdescription(e.target.value)} />\r\n            <hr/>\r\n            <input type=\"text\"placeholder=\"image-source\" size=\"50\" onChange={(e)=>setsrc(e.target.value)} />\r\n            <hr/>\r\n            <input type=\"text\" placeholder=\"rating\" size=\"20\"/>\r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n          <Button variant=\"secondary\" onClick={handleClose}>\r\n            Close\r\n          </Button>\r\n          <Button variant=\"primary\" onClick={()=>props.Addmovie({title:title,description:description,source:src})}>\r\n            Add movie\r\n          </Button>\r\n        </Modal.Footer>\r\n      </Modal>\r\n    </div>\r\n\r\n    </div> );\r\n}\r\n \r\nexport default withRouter(Movielist);","import React from 'react'\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport Navbar from 'react-bootstrap/Navbar';\r\nimport {withRouter} from \"react-router-dom\"\r\nconst Nav = (props) => {\r\n    return ( <div>\r\n    <Navbar bg=\"dark\" variant=\"dark\">\r\n    <Navbar.Brand  >\r\n      <div className=\"Nav\">\r\n      <img style={{cursor:\"pointer\"}} onClick={()=>props.history.push(\"/\")}\r\n        alt=\"\"\r\n        src=\"https://cdn4.vectorstock.com/i/1000x1000/88/28/cinema-popcorn-box-concept-background-realistic-vector-21398828.jpg\"\r\n        width=\"50\"\r\n        height=\"50\"\r\n        className=\"d-inline-block align-top\"\r\n      />{' '}\r\n      <h3 style={{cursor:\"pointer\"}} onClick={()=>props.history.push(\"/\")}> Movie App </h3>\r\n      </div>\r\n    </Navbar.Brand>\r\n    {/* <ul className=\"lien\">\r\n    <li>Home</li>\r\n    <li>About Us</li>\r\n  </ul> */}\r\n  </Navbar>\r\n  \r\n    </div> );\r\n}\r\n \r\nexport default withRouter(Nav);","import React from 'react'\r\n// import ReactStars from \"react-rating-stars-component\";\r\nconst Searchbar = (props) => {\r\n    // const ratingChanged = (newRating) => {\r\n    // console.log(newRating);\r\n    //   };\r\n    return ( <div>\r\n        <input type=\"text\" placeholder=\"Search\" className=\"searchbar\" onChange={(e)=>{props.Search(e.target.value)}}/>\r\n        {/* <ReactStars\r\n            count={5}\r\n            onChange={ratingChanged}\r\n            size={24}\r\n            activeColor=\"#ffd700\"\r\n         />, */}\r\n\r\n    </div> );\r\n}\r\n \r\nexport default Searchbar;","import React from 'react'\r\nconst Title = (props) => {\r\n    return ( <div>\r\n        <h1 className=\"title-container\">Movie App</h1>\r\n    </div> );\r\n}\r\n \r\nexport default Title;","import React from 'react'\r\n\r\n\r\nconst Description = (props) => {\r\n    return ( <div>\r\n{props.Movies.filter(el=>el.title===props.match.params.title).map(el=>\r\n    <div>\r\n        <p>{el.title}</p>\r\n        <p>{el.description}</p>\r\n        <iframe width=\"560\" height=\"315\" src={el.bande_annonce} frameborder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen></iframe>\r\n    </div>)}\r\n   \r\n    </div> );\r\n}\r\n \r\nexport default Description;","import React, { useState } from 'react';\nimport './App.css';\nimport Movielist from './Components/Movielist';\nimport Nav from './Components/Navbar';\nimport Searchbar from './Components/Searchbar';\nimport Title from './Components/Title';\nimport ReactPlayer from 'react-player'\nimport {BrowserRouter as Router , Switch , Route  ,Link} from 'react-router-dom'\nimport Description from './Components/Description';\n\nconst App = (props) => {\n  const [Movies,setMovies] = useState(\n    [{title:\"The Godfather\", description:\"The Gadfather Movie\", rating:3 , source:\"https://methodshop.com/wp-content/uploads/godfather.jpg\" , bande_annonce : \"https://www.youtube.com/embed/sY1S34973zA?start=5\" },\n    {title:\"The Platform\", description:\"The Platform Movie\", rating:3 , source:\"https://i.pinimg.com/736x/9a/64/e6/9a64e60c344deb5c20255d615eafbd0d.jpg\" , bande_annonce : \"https://www.youtube.com/embed/RlfooqeZcdY?start=5\"  },\n    {title:\"Star Wars\", description:\"Star wars Movie\", rating:4 , source:\"https://media.lesechos.com/api/v1/images/view/5df9b9a5d286c254fc20d894/1280x720/0602422245162-web-tete.jpg\" , bande_annonce : \"https://www.youtube.com/embed/8Qn_spdM5Zg?start=5\"}])\n    const [keyword,setkeyword]=useState(\"\")\n\n    const Addmovie = (x) => {\n      setMovies([...Movies,{title:x.title,description:x.description,source:x.source}])\n    }\n\n    const Search = (x) => {\n      setkeyword(x)\n    }\n\n  \n  return ( <div>\n    <Router>\n    <Route path=\"/\" component={()=><Nav/>}/>\n    <Title/>\n    <Route exact path=\"/\" component={()=><Searchbar Search={Search}/>}/>\n    <Route exact path=\"/\" component={()=><Movielist  Movies={Movies} Addmovie={Addmovie} keyword={keyword}/>}/>\n    <Route path=\"/description/:title\" component={(props)=><Description {...props} Movies={Movies} />}/>\n    </Router>\n  </div> );\n}\n \nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}